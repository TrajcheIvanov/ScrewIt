@{
    ViewData["Title"] = "CreateNewProduct";
}


<h1 class="text-white">Create Receipt</h1>

<table class="table table-dark table-striped table-sm  table-responsive-sm col-md-8 offset-md-2 text-center">
    <thead>
        <tr class="text-center">
            <th>No.</th>
            <th>Product</th>
            <th>M-unit</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Total</th>
            <th></th>
        </tr>

    </thead>S
    <tbody id="Input">
        <tr id="ProductInputSection" onkeydown="if(event.keyCode==13) CheckIfChosenProductIsValid()">
            <th id="No"> + </th>
            <td id="Product"><input type="text" name="ProductName" id="ProductName" placeholder="Enter Product Name" class="form-control" required /></td>
            <td id="M-unit"></td>
            <td id="Quantity">@*<input type="text" id="QuantityInput" class="form-control" required />*@</td>
            <td id="Price"></td>
            <td id="Total"></td>
            <td><button class="btn-sm btn-success" onclick="CheckIfChosenProductIsValid()">Add <i class="fas fa-plus-circle"></i></button></td>
        </tr>
    </tbody>
    <tbody id="QuantityInputSection">

    </tbody>
    <tbody id="ReceiptList">

    </tbody>
</table>

@section Scripts{
<script>
    var soldProducts = [];

    //var curentProduct = {
    //    name: " ",
    //    price: " ",
    //    type: " ",
    //    id: " ",
    //    quantity: " "
    //};

    function CheckIfChosenProductIsValid() {
        var productInput = document.getElementById("ProductName");

        axios.get(`https://localhost:44314/Receipts/CheckIfChosenProductIsValid?product=${productInput.value}`)
            .then(function (response) {
                if (response.data.status.isSuccessful) {
                    clearProductInputSection()
                    hideProductInputSection();
                    getProduct(response.data.type, response.data.productId);
                    

                } else {
                    productInput.style.backgroundColor = "yellow";
                    alert("Invalid input, check yellow background input!")
                }
            })
            .catch(function (error) {
                console.log(error);
            })
    }

    function getProduct(type , id) {
        axios.get(`https://localhost:44314/Receipts/getProduct?type=${type}&id=${id}`)
            .then(function (response) {

                var curentProduct = {
                    name: response.data.name,
                    price: response.data.price,
                    type: response.data.type,
                    id: response.data.id,
                    quantity: " "
                };
                //curentProduct.name = response.data.name;
                //curentProduct.price = response.data.price;
                //curentProduct.type = response.data.type;
                //curentProduct.id = response.data.id;

                soldProducts.push(curentProduct)

                updateReceiptList(curentProduct);
              
            })
            .catch(function (error) {
                console.log(error);
            })
    }

    //product input 
    function hideProductInputSection() {
        var InputSection = document.getElementById("ProductInputSection")
        InputSection.style.display = "none";
    }

    //product input 
    function showProductInputSection() {
        var InputSection = document.getElementById("ProductInputSection")
        InputSection.style.display = "table-row";
    }

    //update quantity input
    function updateReceiptList(curentProduct) {

        var quantityInputSection = document.getElementById("QuantityInputSection");


        quantityInputSection.innerHTML =
            `<tr id="Product${soldProducts.length + 1}" onkeydown="if(event.keyCode==13) checkIfQuantityIsValid()">
            <th id="No${soldProducts.length + 1}"> ${soldProducts.length + 1} </th>
            <td id="Product${soldProducts.length + 1}">${curentProduct.name}</td>
            <td id="M-unit${soldProducts.length + 1}"> ${curentProduct.type}</td>
            <td id="Quantity${soldProducts.length + 1}"><input type="text" id="QuantityInput" class="form-control" required /></td>
            <td id="Price${soldProducts.length + 1}"> ${curentProduct.price} </td>
            <td id="Total${soldProducts.length + 1}"> - - - </td>
            <td><button class="btn-sm btn-success" onclick="checkIfQuantityIsValid()">Add <i class="fas fa-plus-circle"></i></button></td>
            </tr >`
    }


    // clear product autocomplete
    function clearProductInputSection() {
        var InputSection = document.getElementById("ProductName");
        InputSection.value = '';
        InputSection.style.backgroundColor = "white";
    } 


    function clearQuantityInputSection() {
        var quantityInputSection = document.getElementById("QuantityInputSection");

        quantityInputSection.innerHTML = null;
    } 

    function checkIfQuantityIsValid() {
        var quantityInput = document.getElementById("QuantityInput");

        if (parseInt(quantityInput.value) < 1 || quantityInput.value == null || isNaN(quantityInput.value)) {
            quantityInput.style.backgroundColor = "yellow";
            alert("Invalid input, check yellow background input!")
        } else {

            soldProducts[soldProducts.length - 1].quantity = quantityInput.value;
            
            fillReceiptListWithNewProduct();

            showProductInputSection();
        }
    }

    //fill receipt list with new product
    function fillReceiptListWithNewProduct() {
        

        clearQuantityInputSection();

        var receiptList = document.getElementById("ReceiptList");

        receiptList.innerHTML += 
            `<tr id="Product${soldProducts.length}">
            <th id="No${soldProducts.length}"> ${soldProducts.length} </th>
            <td id="Product${soldProducts.length}">${soldProducts[soldProducts.length - 1].name}</td>
            <td id="M-unit${soldProducts.length}"> ${soldProducts[soldProducts.length - 1].type}</td>
            <td id="Quantity${soldProducts.length}">${soldProducts[soldProducts.length - 1].quantity}</td>
            <td id="Price${soldProducts.length}"> ${soldProducts[soldProducts.length - 1].price} </td>
            <td id="Total${soldProducts.length}"> ${parseFloat(soldProducts[soldProducts.length - 1].quantity) * soldProducts[soldProducts.length - 1].price}</td>
            <td><button class="btn-sm btn-danger" onclick="deleteProduct(${soldProducts.length})">Delete <i class="fas fa-plus-circle"></i></button></td>
            </tr >`

    }

</script>
<script type="text/javascript">
    $(function () {
        $("#ProductName").autocomplete({
            source: '/Receipts/GetForAutoCompleteProduct',
            minLength: 1
        });
    });

    

</script>


}